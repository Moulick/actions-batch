package templates

import "testing"

func Test_Workflow_WithoutSecrets(t *testing.T) {

	res, err := Render(RenderParams{
		Name:    "test",
		Login:   "test",
		Date:    "test",
		RunsOn:  "test",
		Secrets: map[string]string{},
	})

	if err != nil {
		t.Fatalf("failed to render workflow: %s", err)
	}
	want := `name: workflow

# Generated by alexellis/actuated-batch at: test
# Job requested by test

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
      - main

jobs:
  workflow:
    name: test
    runs-on: test
    steps:
      - uses: actions/checkout@v1
      - name: Run the job
        run: |
          mkdir -p upload
          chmod +x ./job.sh
          ./job.sh
`
	got := res

	if got != want {
		t.Fatalf("want\n%q\n\ngot\n%q\n\n", want, got)
	}
}

func Test_Workflow_WithSecrets(t *testing.T) {

	res, err := Render(RenderParams{
		Name:   "test",
		Login:  "test",
		Date:   "test",
		RunsOn: "test",
		Secrets: map[string]string{
			"OPENFAAS_GATEWAY": "OPENFAAS_GATEWAY",
			"OPENFAAS_URL":     "OPENFAAS_URL",
		},
	})

	if err != nil {
		t.Fatalf("failed to render workflow: %s", err)
	}
	want := `name: workflow

# Generated by alexellis/actuated-batch at: test
# Job requested by test

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
      - main

jobs:
  workflow:
    name: test
    runs-on: test
    steps:
      - uses: actions/checkout@v1
      - name: Run the job
        run: |
          mkdir -p upload
          chmod +x ./job.sh
          ./job.sh

        env:
          OPENFAAS_GATEWAY: ${{ secrets.OPENFAAS_GATEWAY }}
          OPENFAAS_URL: ${{ secrets.OPENFAAS_URL }}`
	got := res

	if got != want {
		t.Fatalf("want\n%q\n\ngot\n%q\n\n", want, got)
	}
}
